#!/bin/bash

#/////////////////////////

SD="$(dirname "$(readlink -e "$0")")"
WD="`pwd`"
SCRIPT="$(basename $0)"
SCRIPT_NAME=${SCRIPT%.*}
SCRIPT_EXTENSION=${SCRIPT##*.}
SELF=$SD/$SCRIPT

#/////////////////////////

set -e

#/////////////////////////

MODE=$1

if [[ "$MODE" == "install" ]] ; then
	echo "Installing package"
fi
if [[ "$MODE" == "upgrade" ]] ; then
	echo "Upgrading package"
fi
if [[ "$MODE" == "remove" ]] ; then
	echo "Removing package"
fi
if [[ "$MODE" == "configure" ]] ; then
	echo "Configuring package"
fi

#/////////////////////////

ROOT_USER=$(whoami)
if [[ -n "$SUDO_USER" ]] ; then
	CURRENT_USER=$SUDO_USER
else
	CURRENT_USER=$ROOT_USER
fi

#/////////////////////////

APP_GREP="$(which grep)"

APP_DOS2UNIX="$(which dos2unix)"

#/////////////////////////

if [ ! -e "$APP_GREP" ] ; then
	echo "The binary 'grep' doesn't seem to exist!"
	exit
fi

#/////////////////////////

if [ ! -e "$APP_DOS2UNIX" ] ; then
	echo "The binary 'dos2unix' doesn't seem to exist!"
	exit
fi

#/////////////////////////

REASONER_USER="${assembly.user}"
REASONER_GROUP="${assembly.group}"

#/////////////////////////

# Configure rights

echo "Setting permissions for user '$CURRENT_USER'"
chown -R $CURRENT_USER ${assembly.installationdir}

#/////////////////////////

if [ -e "$APP_DOS2UNIX" ] ; then
	find ${assembly.installationdir}/ -type f -exec $APP_DOS2UNIX -q {} \;
fi

#/////////////////////////

if [[ -n "$REASONER_USER" ]] ; then
	# Check if user exists
	if id "$1" &>/dev/null; then
		echo "User '$REASONER_USER' found"
	else
		echo "User '$REASONER_USER' not found"
		useradd -M -r --shell /bin/false $REASONER_USER
	fi
else
	echo "User not configured!"
	exit
fi

if [[ -n "$REASONER_GROUP" ]] ; then
	# Check if group exists
	if $($APP_GREP --quiet "$REASONER_GROUP:" /etc/group) ; then
		# Check if the users is added to the group already
		if ! $($APP_GREP --quiet -Ei "$REASONER_GROUP:(.*)$REASONER_USER" /etc/group) ; then
			echo "Adding user '$REASONER_USER' to group '$REASONER_GROUP'"
			usermod -a -G $REASONER_GROUP $REASONER_USER
			echo "Log-Out and Log-In or Reboot the system for the changes to be applied!"
		else
			echo "User '$REASONER_USER' already in group '$REASONER_GROUP'"
		fi
	else
		echo "Group '$REASONER_GROUP' does not exist. Cannot add user '$REASONER_USER' to this group."
	fi
else
	echo "Group not configured!"
	exit
fi

#/////////////////////////

# Register as a service

echo "Registering service '${assembly.name}'"

systemctl enable ${assembly.installationdir}/${assembly.name}.service
systemctl start ${assembly.name}

#/////////////////////////